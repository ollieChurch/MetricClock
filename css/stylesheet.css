/*UNIVERSAL*/

body {
    margin: 0;
    background-color: mintcream;
}

header {
    text-align: center;
    color: black;
    background: palegreen;
    font-size: 2.25rem;
    padding-top: 10px;
    margin-bottom: 20px;
}

h1 {
    margin-top: .25em;
    padding: 0;
    margin-bottom: 0;
}

.headerSubtitle {
    padding: 0;
    margin-top: 0;
}

button {
    cursor: pointer;
}

.navigation {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    background: darkgreen;
}

.navButtons {
    background: none;
	border: none;
    font-size: 1.75rem;
    color: mintcream;
    padding: 5px;
    transition: all 0.75s;
}

.navButtons:not(#selected):hover {
    background: green;
}

#selected {
    color: palegreen;
}

.navigation > :first-child {
    border-right: mintcream 5px solid;
}

main {
    margin: 10px;
    margin-top: -10px;
    justify-content: center;
    align-items: center;
}

p {
    font-size: 1.25rem;
}

.intro {
    text-align: center;
    margin: 20px auto;
    max-width: 1000px;
}

.functionalButtons {
    justify-content: center;
    align-items: center;
    padding: 10px;
    font-size: 2rem;
    
    background-color: darkgreen;
    color: mintcream;
    border: 5px palegreen solid;
    transition: all 0.75s;
}

.functionalButtons:hover {
    background-color: palegreen;
    color: darkgreen;
    border-color: darkgreen;
}

/*CLOCK*/

.clockTitle {
    text-align: center;
}

.clocks {
    text-align: center;
    margin: -15px auto 20px auto;
    padding: 10px;
    
    font-size: 3.5rem;
    background-color: palegreen;
    border: 5px darkgreen solid;

    max-width: 800px;
}

#hideButton {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px,1fr));
    grid-gap: 5px;
    justify-content: space-evenly;
    align-items: center;
    margin: 10px auto;
    text-align: center;
    max-width: 1000px
}

#buttonBlurb {
	padding: 5px;
}

/*CONVERSION*/

.converter {
	display: grid;
    justify-content: space-evenly;
    align-items: center;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, auto);
    grid-gap: 10px;
    margin: 0 20px;
    grid-template-areas:
        "t f"
        "i i"
}

#toMetric {
    grid-area: t;
}

#fromMetric {
	grid-area: f;
}

#conversionForm {
	grid-area: i;
    padding: 5px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 10px;
    grid-template-areas: 
        "i i i"
        "u u u"
        "c c c"
        "o o o"
        ". r ."
}

.formItems {
    background: palegreen;
    color: darkgreen;
    display: flex;
    justify-content: center;
    justify-self: center;
    text-align: center; 
    align-items: center;
    
    font-size: 3.5rem;
    border: darkgreen 5px solid;
    padding: 0 10px;
    width: 100%;
    max-width: 800px;
}

label {
    font-size: 1.5rem;
    color: darkgreen;
    width: 100%;
    max-width: 800px;
    margin: 20px auto 0 auto;
}

#inputLabel {
    grid-area: i;
}

#conversionLabel {
    grid-area: c;
}

#timeInput {
    grid-area: u;
    color: black;
    cursor: pointer;
}

#conversionOutput {
    grid-area: o;
    color: black;
}

#resetButton {
    grid-area: r;
	margin-top: 20px;
    justify-self: center;
}